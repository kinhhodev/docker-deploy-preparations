version: '3'

services:

  web_server:
    depends_on:
      - wordpress
    image: nginx:latest
    container_name: web_server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      # mapping folder source in local to folder /var/www/html in container
      - ./wordpress:/var/www/html
      # logs for nginx
      - ./nginx/logs/access.log:/var/log/nginx/access.log
      - ./nginx/logs/error.log:/var/log/nginx/error.log
      # mapping folder config in local to folder /etc/nginx/nginx.conf in container
      - ./nginx/conf.d/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      # - ./certbot:/etc/letsencrypt # Certbot command
      # - ./certbot-etc:/etc/letsencrypt
    networks:
      - php-wordpress-nginx-mysql

  wordpress:
    depends_on: 
      - db
    image: wordpress:php7.4-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=$MYSQL_DATABASE_NAME
    volumes:
      - ./wordpress:/var/www/html
    networks:
      - php-wordpress-nginx-mysql

  db:
    image: mysql:latest
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=$MYSQL_DATABASE_NAME
    volumes: 
      - ./mysql:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - php-wordpress-nginx-mysql

  # certbot:
  #   depends_on:
  #     - webserver
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot-etc:/etc/letsencrypt
  #     - ./wordpress:/var/www/html
  #   command: certonly --webroot --webroot-path=/var/www/html --email $CERTBOT_EMAIL --agree-tos --no-eff-email --staging -d $CERTBOT_DOMAIN -d www.$CERTBOT_DOMAIN


networks:
  php-wordpress-nginx-mysql:
    driver: bridge